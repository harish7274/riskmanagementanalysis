from risk.models import Risk
from risk.mitigation import add_mitigation
from risk.monitoring import update_risk_status

# Simulate detection of an advanced malware threat
advanced_malware_risk = Risk(
    id=10,
    title="Fileless Malware with Privilege Escalation",
    description=(
        "Advanced fileless malware detected leveraging PowerShell for in-memory execution, "
        "combined with privilege escalation exploits to gain SYSTEM access. "
        "Indicators include suspicious PowerShell activity, credential dumping, and persistence via WMI."
    ),
    category="Malware",
    likelihood=5,
    impact=5,
    framework_alignment="NIST"
)

print(f"Simulated Risk: {advanced_malware_risk.title}")
print(f"Description: {advanced_malware_risk.description}")
print(f"Category: {advanced_malware_risk.category}")
print(f"Likelihood: {advanced_malware_risk.likelihood}")
print(f"Impact: {advanced_malware_risk.impact}")
print(f"Framework: {advanced_malware_risk.framework_alignment}")

# Simulate detection and response
print("\n[Detection] ALERT: Advanced malware activity detected! Initiating incident response...")

# Add multiple mitigation actions
add_mitigation(advanced_malware_risk, "Isolate affected endpoints from the network", "SOC Team")
add_mitigation(advanced_malware_risk, "Perform memory forensics and collect volatile data", "Forensics Team")
add_mitigation(advanced_malware_risk, "Reset credentials for compromised accounts", "IT Security")
add_mitigation(advanced_malware_risk, "Apply security patches and update PowerShell policies", "IT Operations")

print("\n[Mitigation] Actions taken:")
for m in advanced_malware_risk.mitigations:
    print(f"- {m.action} (Owner: {m.owner}, Status: {m.status})")

# Simulate updating risk status after mitigation
update_risk_status(advanced_malware_risk, "Mitigated")
print(f"\n[Status Update] Risk status updated to: {advanced_malware_risk.status}")

# Simulate post-incident alert
if advanced_malware_risk.status == "Mitigated":
    print("[Post-Incident] Review logs, monitor for reinfection, and conduct user awareness training.")
else:
    print("[Post-Incident] Incident ongoing! Escalate to management.")
